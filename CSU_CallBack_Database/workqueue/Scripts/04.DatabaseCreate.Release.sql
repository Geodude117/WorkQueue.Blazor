/*
Deployment script for CSUCallBack.Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "WorkQueues"
:setvar DefaultFilePrefix "WorkQueues"
:setvar DefaultDataPath "D:\MSSQL12.MSSQLSERVER\MSSQL\Data\"
:setvar DefaultLogPath "L:\MSSQL12.MSSQLSERVER\MSSQL\Data\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END

GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [callback]...';


GO
CREATE SCHEMA [callback]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [workqueue]...';


GO
CREATE SCHEMA [workqueue]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [callback].[CallbackDetail]...';


GO
CREATE TABLE [callback].[CallbackDetail] (
    [ID]                INT             IDENTITY (1, 1) NOT NULL,
    [WescotRef]         INT             NOT NULL,
    [DateForCallback]   DATETIME        NOT NULL,
    [NameOfCaller]      NVARCHAR (100)  NOT NULL,
    [Relationship]      NVARCHAR (100)  NULL,
    [ContactNumber]     NVARCHAR (50)   NOT NULL,
    [TimeToAvoid]       NVARCHAR (200)  NULL,
    [ReasonForCallback] NVARCHAR (4000) NOT NULL,
    [ReasonForTransfer] NVARCHAR (4000) NOT NULL,
    [HealthIssue]       NVARCHAR (4000) NULL,
    [QueueItemID]       INT             NULL,
    CONSTRAINT [PK_CallbackDetail] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [callback].[CallbackDetail].[IX_CallbackDetail_QueueItemID]...';


GO
CREATE NONCLUSTERED INDEX [IX_CallbackDetail_QueueItemID]
    ON [callback].[CallbackDetail]([QueueItemID] ASC);


GO
PRINT N'Creating [workqueue].[RAGRule]...';


GO
CREATE TABLE [workqueue].[RAGRule] (
    [RAGRuleID] INT             NOT NULL,
    [RAGStatus] NVARCHAR (100)  NOT NULL,
    [LowValue]  DECIMAL (18, 2) NOT NULL,
    [MidValue]  DECIMAL (18, 2) NOT NULL,
    [HighValue] DECIMAL (18, 2) NOT NULL,
    [LowToHigh] BIT             NOT NULL,
    CONSTRAINT [PK_RAGRule] PRIMARY KEY CLUSTERED ([RAGRuleID] ASC)
);


GO
PRINT N'Creating [workqueue].[QueueResult]...';


GO
CREATE TABLE [workqueue].[QueueResult] (
    [QueueResultID] INT            NOT NULL,
    [QueueResult]   NVARCHAR (100) NOT NULL,
    [QueueID]       INT            NOT NULL,
    CONSTRAINT [PK_Queue_Result] PRIMARY KEY CLUSTERED ([QueueResultID] ASC)
);


GO
PRINT N'Creating [workqueue].[QueueResult].[IX_QueueResult_QueueID]...';


GO
CREATE NONCLUSTERED INDEX [IX_QueueResult_QueueID]
    ON [workqueue].[QueueResult]([QueueID] ASC);


GO
PRINT N'Creating [workqueue].[ActionType]...';


GO
CREATE TABLE [workqueue].[ActionType] (
    [ActionID]          INT            NOT NULL,
    [ActionDescription] NVARCHAR (100) NOT NULL,
    CONSTRAINT [PK_ActionType] PRIMARY KEY CLUSTERED ([ActionID] ASC)
);


GO
PRINT N'Creating [workqueue].[Queue]...';


GO
CREATE TABLE [workqueue].[Queue] (
    [QueueID]       INT            NOT NULL,
    [QueueGroupID]  INT            NOT NULL,
    [Name]          NVARCHAR (100) NOT NULL,
    [IsActive]      BIT            NOT NULL,
    [RAGRuleID]     INT            NULL,
    [DefaultStatus] BIT            NOT NULL,
    CONSTRAINT [PK_Queue] PRIMARY KEY CLUSTERED ([QueueID] ASC)
);


GO
PRINT N'Creating [workqueue].[Queue].[IX_Queue_QueueGroupId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Queue_QueueGroupId]
    ON [workqueue].[Queue]([QueueGroupID] ASC);


GO
PRINT N'Creating [workqueue].[Queue].[IX_Queue_RAGRuleID]...';


GO
CREATE NONCLUSTERED INDEX [IX_Queue_RAGRuleID]
    ON [workqueue].[Queue]([RAGRuleID] ASC);


GO
PRINT N'Creating [workqueue].[QueueGroup]...';


GO
CREATE TABLE [workqueue].[QueueGroup] (
    [QueueGroupID]        INT            NOT NULL,
    [Name]                NVARCHAR (100) NOT NULL,
    [IsActive]            BIT            NOT NULL,
    [AccessGroupPublic]   NVARCHAR (50)  NULL,
    [AccessGroupBase]     NVARCHAR (50)  NULL,
    [AccessGroupExtended] NVARCHAR (50)  NULL,
    [AccessGroupAdmin]    NVARCHAR (50)  NULL,
    [DefaultQueueID]      INT            NULL,
    CONSTRAINT [PK_QueueGroup] PRIMARY KEY CLUSTERED ([QueueGroupID] ASC)
);


GO
PRINT N'Creating [workqueue].[QueueAction]...';


GO
CREATE TABLE [workqueue].[QueueAction] (
    [QueueActionID] INT            NOT NULL,
    [QueueResultID] INT            NOT NULL,
    [ActionID]      INT            NOT NULL,
    [ActionCode]    NVARCHAR (100) NOT NULL,
    [DefaultDays]   INT            NULL,
    CONSTRAINT [PK_Queue_Action] PRIMARY KEY CLUSTERED ([QueueActionID] ASC)
);


GO
PRINT N'Creating [workqueue].[QueueAction].[IX_QueueAction_ActionID]...';


GO
CREATE NONCLUSTERED INDEX [IX_QueueAction_ActionID]
    ON [workqueue].[QueueAction]([ActionID] ASC);


GO
PRINT N'Creating [workqueue].[QueueAction].[IX_QueueAction_QueueResultID]...';


GO
CREATE NONCLUSTERED INDEX [IX_QueueAction_QueueResultID]
    ON [workqueue].[QueueAction]([QueueResultID] ASC);


GO
PRINT N'Creating [workqueue].[QueueItem]...';


GO
CREATE TABLE [workqueue].[QueueItem] (
    [QueueItemID]       INT            IDENTITY (1, 1) NOT NULL,
    [WescotRef]         INT            NOT NULL,
    [CustomerName]      NVARCHAR (100) NOT NULL,
    [CompletedDate]     DATETIME       NULL,
    [CompletedBy]       NVARCHAR (100) NULL,
    [DueDate]           DATETIME       NOT NULL,
    [CreatedDate]       DATETIME       NOT NULL,
    [CreatedBy]         NVARCHAR (100) NOT NULL,
    [Summary]           NVARCHAR (500) NOT NULL,
    [ParentQueueItemID] INT            NULL,
    [QueueID]           INT            NOT NULL,
    [LockTime]          DATETIME       NULL,
    [LockedBy]          NVARCHAR (100) NULL,
    CONSTRAINT [PK_Queue_Item] PRIMARY KEY CLUSTERED ([QueueItemID] ASC) WITH (FILLFACTOR = 85)
);


GO
PRINT N'Creating [workqueue].[QueueItem].[IX_QueueItem_QueueId]...';


GO
CREATE NONCLUSTERED INDEX [IX_QueueItem_QueueId]
    ON [workqueue].[QueueItem]([QueueID] ASC);


GO
PRINT N'Creating unnamed constraint on [workqueue].[Queue]...';


GO
ALTER TABLE [workqueue].[Queue]
    ADD DEFAULT 0 FOR [DefaultStatus];


GO
PRINT N'Creating unnamed constraint on [workqueue].[QueueGroup]...';


GO
ALTER TABLE [workqueue].[QueueGroup]
    ADD DEFAULT 1 FOR [DefaultQueueID];


GO
PRINT N'Creating [workqueue].[FK_Queue_QueuesResult]...';


GO
ALTER TABLE [workqueue].[QueueResult]
    ADD CONSTRAINT [FK_Queue_QueuesResult] FOREIGN KEY ([QueueID]) REFERENCES [workqueue].[Queue] ([QueueID]);


GO
PRINT N'Creating [workqueue].[FK_Queue_QueueGroup]...';


GO
ALTER TABLE [workqueue].[Queue]
    ADD CONSTRAINT [FK_Queue_QueueGroup] FOREIGN KEY ([QueueGroupID]) REFERENCES [workqueue].[QueueGroup] ([QueueGroupID]);


GO
PRINT N'Creating [workqueue].[FK_Queue_RAGRule]...';


GO
ALTER TABLE [workqueue].[Queue]
    ADD CONSTRAINT [FK_Queue_RAGRule] FOREIGN KEY ([RAGRuleID]) REFERENCES [workqueue].[RAGRule] ([RAGRuleID]);


GO
PRINT N'Creating [workqueue].[FK_Queue_Action_Action_Type]...';


GO
ALTER TABLE [workqueue].[QueueAction]
    ADD CONSTRAINT [FK_Queue_Action_Action_Type] FOREIGN KEY ([ActionID]) REFERENCES [workqueue].[ActionType] ([ActionID]);


GO
PRINT N'Creating [workqueue].[FK_Queue_Action_Queue_Result]...';


GO
ALTER TABLE [workqueue].[QueueAction]
    ADD CONSTRAINT [FK_Queue_Action_Queue_Result] FOREIGN KEY ([QueueResultID]) REFERENCES [workqueue].[QueueResult] ([QueueResultID]);


GO
PRINT N'Creating [workqueue].[FK_Queue_Item_Queues]...';


GO
ALTER TABLE [workqueue].[QueueItem]
    ADD CONSTRAINT [FK_Queue_Item_Queues] FOREIGN KEY ([QueueID]) REFERENCES [workqueue].[Queue] ([QueueID]);


GO
PRINT N'Creating [workqueue].[FK_QueueItem_QueueItem]...';


GO
ALTER TABLE [workqueue].[QueueItem]
    ADD CONSTRAINT [FK_QueueItem_QueueItem] FOREIGN KEY ([ParentQueueItemID]) REFERENCES [workqueue].[QueueItem] ([QueueItemID]);


GO
PRINT N'Creating [workqueue].[Test]...';


GO

CREATE VIEW [workqueue].[Test]
AS
SELECT        qi.QueueItemID, qi.WescotRef, qi.CustomerName, qi.CompletedDate, qi.CompletedBy, qi.DueDate, qi.CreatedDate, qi.CreatedBy, qi.Summary, qi.ParentQueueItemID, qi.QueueID, r.RAGRuleID, r.RAGStatus, r.LowValue, 
                         r.MidValue, r.HighValue, r.LowToHigh, q.QueueGroupID, qi.LockTime
,
                                                                                  case when qi.LockTime is not null then 1 
                                                                                   else 0 end as IsLocked
FROM            workqueue.QueueItem AS qi INNER JOIN
                         workqueue.Queue AS q ON q.QueueID = qi.QueueID INNER JOIN
                         workqueue.RAGRule AS r ON r.RAGRuleID = q.RAGRuleID
GO
PRINT N'Creating [workqueue].[QueueItemWithRAG]...';


GO




CREATE VIEW [workqueue].[QueueItemWithRAG]
AS
SELECT        qi.QueueItemID, qi.WescotRef, qi.CustomerName, qi.CompletedDate, qi.CompletedBy, qi.DueDate, qi.CreatedDate, qi.CreatedBy, qi.Summary, qi.ParentQueueItemID, qi.QueueID, r.RAGRuleID, r.RAGStatus, r.LowValue, 
                         r.MidValue, r.HighValue, r.LowToHigh, q.QueueGroupID, qi.LockTime, qi.LockedBy,
                                                                                                case when qi.LockTime is null then cast(0 as bit) 
                                                                                                  when DateDiff(minute, qi.LockTime,GETDATE()) <= 15 then cast(1 as bit) 
                                                                                                  when DateDiff(minute, qi.LockTime,GETDATE()) >= 15 then cast(0 as bit) 
                                                                                                  else cast(1 as bit)  end as IsLocked
FROM            workqueue.QueueItem AS qi INNER JOIN
                         workqueue.Queue AS q ON q.QueueID = qi.QueueID INNER JOIN
                         workqueue.RAGRule AS r ON r.RAGRuleID = q.RAGRuleID
GO
PRINT N'Creating [callback].[CallbackDetail_Insert]...';


GO
CREATE PROCEDURE [callback].[CallbackDetail_Insert]
              @WescotRef int,
              @DateForCallback datetime,
              @NameOfCaller nvarchar(100),
              @Relationship  nvarchar(100),
              @ContactNumber nvarchar(50),
              @TimeToAvoid nvarchar(200),
              @ReasonForCallback nvarchar(4000),
              @ReasonForTransfer  nvarchar(4000),
              @HealthIssue nvarchar(4000),
              @QueueItemID int
AS
              INSERT INTO      callback.CallbackDetail 
                           (
                                         WescotRef,
                                         DateForCallback,
                                         NameOfCaller,
                                         Relationship,
                                         ContactNumber,
                                         TimeToAvoid,
                                         ReasonForCallback,
                                         ReasonForTransfer,
                                         HealthIssue,
                                         QueueItemID
                           )            
              VALUES 
                           (
                                         @WescotRef,
                                         @DateForCallback,
                                         @NameOfCaller,
                                         @Relationship,
                                         @ContactNumber,
                                         @TimeToAvoid,
                                         @ReasonForCallback,
                                         @ReasonForTransfer,
                                         @HealthIssue,
                                         @QueueItemID
                           )


RETURN SCOPE_IDENTITY()
GO
PRINT N'Creating [callback].[CallbackDetail_Update_By_ID]...';


GO
CREATE PROCEDURE [callback].[CallbackDetail_Update_By_ID]
              @ID int,
              @WescotRef int,
              @DateForCallback datetime,
              @NameOfCaller nvarchar(100),
              @Relationship  nvarchar(100),
              @ContactNumber nvarchar(50),
              @TimeToAvoid nvarchar(200),
              @ReasonForCallback nvarchar(4000),
              @ReasonForTransfer  nvarchar(4000),
              @HealthIssue nvarchar(4000)
AS
              UPDATE 
                           callback.CallbackDetail 
              SET
                           WescotRef = @WescotRef,
                           DateForCallback = @DateForCallback,
                           NameOfCaller = @NameOfCaller,
                           Relationship = @Relationship,
                           ContactNumber = @ContactNumber,
                           TimeToAvoid = @TimeToAvoid,
                           ReasonForCallback = @ReasonForCallback,
                           ReasonForTransfer = @ReasonForTransfer,
                           HealthIssue = @HealthIssue
              WHERE
                           ID = @ID
RETURN 0
GO
PRINT N'Creating [callback].[CallbackDetail_Select_By_WescotRef]...';


GO
CREATE PROCEDURE [callback].[CallbackDetail_Select_By_WescotRef]
              @WescotRef nvarchar(50)
AS
              SELECT
                           [cbd].[ID],
                           [cbd].[WescotRef],
                           [cbd].[DateForCallback],
                           [cbd].[NameOfCaller],
                           [cbd].[Relationship],
                           [cbd].[ContactNumber],
                           [cbd].[TimeToAvoid],
                           [cbd].[ReasonForCallback],
                           [cbd].[ReasonForTransfer],
                           [cbd].[HealthIssue],
                           [cbd].[QueueItemID]
              FROM 
                           callback.CallbackDetail cbd
              WHERE 
                           cbd.WescotRef = @WescotRef
RETURN 0
GO
PRINT N'Creating [callback].[CallbackDetail_Select_By_QueueItemID]...';


GO
CREATE PROCEDURE [callback].[CallbackDetail_Select_By_QueueItemID]
              @QueueItemID int 
AS
              SELECT 
                           [cbd].[ID],
                           [cbd].[WescotRef],
                           [cbd].[DateForCallback],
                           [cbd].[NameOfCaller],
                           [cbd].[Relationship],
                           [cbd].[ContactNumber],
                           [cbd].[TimeToAvoid],
                           [cbd].[ReasonForCallback],
                           [cbd].[ReasonForTransfer],
                           [cbd].[HealthIssue],
                           [cbd].[QueueItemID]
              FROM
                           callback.CallbackDetail cbd
              WHERE 
                           cbd.QueueItemID = @QueueItemID
RETURN 0
GO
PRINT N'Creating [callback].[CallbackDetails_Delete]...';


GO
CREATE PROCEDURE [callback].[CallbackDetails_Delete]
              @QueueItemID int
AS
              DELETE
                           callback.CallbackDetail
              FROM 
                           callback.CallbackDetail
              wHERE 
                           QueueItemID = @QueueItemID
RETURN 0
GO
PRINT N'Creating [callback].[CallbackDetails_Delete_WescotRef]...';


GO

CREATE PROCEDURE [callback].[CallbackDetails_Delete_WescotRef]
              @WescotRef int
AS
              DELETE
                           callback.CallbackDetail
              FROM 
                           callback.CallbackDetail
              WHERE 
                           WescotRef = @WescotRef
RETURN 0
GO
PRINT N'Creating [callback].[GdprAnonymiseMe]...';


GO

CREATE PROCEDURE [callback].[GdprAnonymiseMe]
              @WescotRef int
AS

              UPDATE
                           callback.CallbackDetail
              SET
                           NameOfCaller = 'Wes Cot',
                           Relationship = null,
                           ContactNumber = '0110100A0D0W',
                           TimeToAvoid = null,
                           ReasonForCallback = 'Name None',
                           ReasonForTransfer = 'None',
                           HealthIssue = null
              WHERE
                           WescotRef = @WescotRef

RETURN 0
GO
PRINT N'Creating [workqueue].[Queue_Select_All]...';


GO
CREATE PROCEDURE [workqueue].[Queue_Select_All]
              
AS
              SELECT
                           [q].[QueueID],
                           [q].[QueueGroupID],
                           [q].[Name],
                           [q].[IsActive],
                           [q].[RAGRuleID],
                           [q].[DefaultStatus]
              FROM
                           workqueue.Queue q
RETURN 0
GO
PRINT N'Creating [workqueue].[QueueGroup_Select_All]...';


GO
CREATE PROCEDURE [workqueue].[QueueGroup_Select_All]
AS

              SELECT
                           [qg].[QueueGroupID],
                           [qg].[Name],
                           [qg].[IsActive],
                           [qg].[AccessGroupPublic],
                           [qg].[AccessGroupBase],
                           [qg].[AccessGroupExtended],
                           [qg].[AccessGroupAdmin]
              FROM
                           workqueue.QueueGroup qg
              ORDER BY 
                           qg.QueueGroupID ASC
RETURN 0
GO
PRINT N'Creating [workqueue].[QueueResult_Select_All]...';


GO
CREATE PROCEDURE [workqueue].[QueueResult_Select_All]
AS

              SELECT 
                           [qr].[QueueResultID],
                           [qr].[QueueResult],
                           [qr].[QueueID]
              FROM 
                           workqueue.QueueResult qr
              ORDEr BY
                           qr.QueueResult
RETURN 0
GO
PRINT N'Creating [workqueue].[QueueAction_Select_All]...';


GO
CREATE PROCEDURE [workqueue].[QueueAction_Select_All]
AS

              SELECT 
                           [qa].[QueueActionID],
                           [qa].[QueueResultID],
                           [qa].[ActionID],
                           [qa].[ActionCode],
                           [qa].[DefaultDays]
              FROM
                           workqueue.QueueAction qa
              ORDER BY 
                           qa.ActionCode
RETURN 0
GO
PRINT N'Creating [workqueue].[RAGRule_Select_All]...';


GO

create procedure workqueue.RAGRule_Select_All
as

select
              [r].[RAGRuleID],
              [r].[RAGStatus],
              [r].[LowValue], 
              [r].[MidValue],
              [r].[HighValue],
              [r].[LowToHigh]
from
              workqueue.RAGRule r
GO
PRINT N'Creating [workqueue].[ActionType_Select_All]...';


GO
CREATE PROCEDURE [workqueue].[ActionType_Select_All]
AS

              select
                           [act].[ActionID], 
                           [act].[ActionDescription]
              FROM
                           workqueue.ActionType act
              ORDER BY
                           act.ActionDescription 

RETURN 0
GO
PRINT N'Creating [workqueue].[QueueResult_Select_QueueResult_ByQueueID]...';


GO
CREATE PROCEDURE [workqueue].[QueueResult_Select_QueueResult_ByQueueID]
              @QueueID int
AS
              SELECT 
                           [qr].[QueueResultID], [qr].[QueueResult], [qr].[QueueID]
              FROM 
                           workqueue.QueueResult qr
              WHERE
                           qr.QueueID = @QueueID 

RETURN 0
GO
PRINT N'Creating [workqueue].[QueueItem_Delete]...';


GO
CREATE PROCEDURE [workqueue].[QueueItem_Delete]
              @QueueItemID int
AS
              DELETE
                           workqueue.QueueItem
              FROM
                           workqueue.QueueItem
              WHERE
                           QueueItemID = @QueueItemID
RETURN 0
GO
PRINT N'Creating [workqueue].[QueueItem_Insert]...';


GO
CREATE PROCEDURE [workqueue].[QueueItem_Insert]
              @WescotRef int,
              @CustomerName nvarchar(100),
              @CompletedDate datetime,
              @CompletedBy nvarchar(100),
              @DueDate datetime,
              @CreatedDate datetime,
              @CreatedBy nvarchar(100),
              @Summary nvarchar(500),
              @ParentQueueItemID int,
              @QueueID int
AS
              INSERT INTO      workqueue.QueueItem 
                           (
                                         WescotRef,
                                         CustomerName,
                                         CompletedDate,
                                         CompletedBy,
                                         DueDate,
                                         CreatedDate,
                                         CreatedBy,
                                         Summary,
                                         ParentQueueItemID,
                                         QueueID
                           )
              VALUES 
                           (
                                         @WescotRef,
                                         @CustomerName,
                                         @CompletedDate,
                                         @CompletedBy,
                                         @DueDate,
                                         @CreatedDate,
                                         @CreatedBy,
                                         @Summary,
                                         @ParentQueueItemID,
                                         @QueueID
                           )

RETURN SCOPE_IDENTITY()
GO
PRINT N'Creating [workqueue].[QueueItem_Select_ActiveByGroupId]...';


GO
CREATE PROCEDURE [workqueue].[QueueItem_Select_ActiveByGroupId]
              @queueGroupId int = 0
AS

              SELECT
                           [qi].[QueueItemID], [qi].[WescotRef], [qi].[CustomerName], [qi].[CompletedDate], [qi].[CompletedBy], [qi].[DueDate], [qi].[CreatedDate], [qi].[CreatedBy], [qi].[Summary], [qi].[ParentQueueItemID], [qi].[LockTime], [qi].[Islocked], [qi].[LockedBy] , [qi].[QueueID], [qi].[RAGRuleID], [qi].[RAGStatus], [qi].[LowValue], [qi].[MidValue], [qi].[HighValue], [qi].[LowToHigh]
              FROM
                           workqueue.QueueItemWithRAG qi
              WHERE
                           qi.QueueGroupID = @queueGroupId 
              and qi.CompletedDate is null
GO
PRINT N'Creating [workqueue].[QueueItem_Select_ById]...';


GO
CREATE PROCEDURE [workqueue].[QueueItem_Select_ById]
              @queueItemId int
AS

              SELECT
                           [qi].[QueueItemID], [qi].[WescotRef], [qi].[CustomerName], [qi].[CompletedDate], [qi].[CompletedBy], [qi].[DueDate], [qi].[CreatedDate], [qi].[CreatedBy], [qi].[Summary], [qi].[ParentQueueItemID], [qi].[LockTime], [qi].[Islocked], [qi].[LockedBy], [qi].[QueueID], [qi].[RAGRuleID], [qi].[RAGStatus], [qi].[LowValue], [qi].[MidValue], [qi].[HighValue], [qi].[LowToHigh]
              FROM
                           workqueue.QueueItemWithRAG qi
              where
                           qi.QueueItemID = @queueItemId
GO
PRINT N'Creating [workqueue].[QueueItem_Delete_WescotRef]...';


GO

CREATE PROCEDURE [workqueue].[QueueItem_Delete_WescotRef]
              @WescotRef int
AS
              DELETE
                           workqueue.QueueItem
              FROM
                           workqueue.QueueItem
              WHERE
                           WescotRef = @WescotRef
RETURN 0
GO
PRINT N'Creating [workqueue].[QueueItemGdprAnnoymiseMe]...';


GO

CREATE PROCEDURE [workqueue].[QueueItemGdprAnnoymiseMe]
              @WescotRef int
AS

              UPDATE
                           workqueue.QueueItem
              SET
                           CustomerName = 'Wes Cot',
                           Summary = '6a 61 63 6b 20 77 61 73 20 68 65 72 65 '
              WHERE
                           WescotRef = @WescotRef

RETURN 0
GO
PRINT N'Creating [workqueue].[QueueSearch_User]...';


GO


CREATE PROCEDURE [workqueue].[QueueSearch_User]
              @QueueItemId int = 0
AS
Declare @locker nvarchar(100), @Id int

              SELECT
                           @locker = [qi].[LockedBy]
              FROM
                           workqueue.QueueItem qi
              WHERE
                           qi.QueueItemId = @QueueItemId

                           select @locker


update 
              workqueue.QueueItem
set
              LockedBy = null,
              LockTime = null
where
              LockedBy = @locker
and QueueItemId != @QueueItemId

RETURN 0
GO
PRINT N'Creating [workqueue].[QueueResult_Search_Action_Code_By_QueueResultID]...';


GO
CREATE PROCEDURE [workqueue].[QueueResult_Search_Action_Code_By_QueueResultID]
              @QueueResultID int
AS
              SELECT 
                                         [qa].[ActionID], 
                                         [qa].[ActionCode],
                                         [qa].[DefaultDays]
              FROM
                           workqueue.QueueAction qa
              WHERE 
                           [qa].[QueueResultID] = @QueueResultID
GO
PRINT N'Creating [workqueue].[QueueItem_Select_Search]...';


GO
CREATE PROCEDURE [workqueue].[QueueItem_Select_Search]
              @StartDate DATETIME,
              @EndDate DATETIME,
              @WescotRef INT,
              @RaiseAgentId NVARCHAR(100),
              @ActionAgentId NVARCHAR(100),
              @QueueGroupId INT,
              @QueueItemID INT, 
              @IsActive bit
AS
              SELECT
                           [qi].[QueueItemID], [qi].[WescotRef], [qi].[CustomerName], [qi].[CompletedDate], [qi].[CompletedBy], [qi].[DueDate], [qi].[CreatedDate], [qi].[CreatedBy], [qi].[Summary], [qi].[ParentQueueItemID],[qi].[LockTime], [qi].[Islocked], [qi].[LockedBy] , [qi].[QueueID], [qi].[RAGRuleID], [qi].[RAGStatus], [qi].[LowValue], [qi].[MidValue], [qi].[HighValue], [qi].[LowToHigh]
              FROM
                           workqueue.QueueItemWithRAG qi

              WHERE
                           (@QueueGroupId IS NULL OR qi.QueueGroupID = @QueueGroupId)
              AND (@RaiseAgentId IS NULL OR qi.CreatedBy = @RaiseAgentId)
              AND (@ActionAgentId IS NULL OR qi.CompletedBy = @ActionAgentId)
              and (@WescotRef is null or qi.WescotRef = @WescotRef)
              and (@StartDate is null or qi.CreatedDate >= @StartDate)
              and (@EndDate is null or qi.CompletedDate <= @EndDate)
              and (@QueueItemID is null or qi.QueueItemID = @QueueItemID)
              and (@IsActive is null 
                                         or @IsActive = 1 and qi.CompletedDate is null 
                                         or @IsActive = 0 and qi.CompletedDate is not null)
GO
PRINT N'Creating [workqueue].[QueueItem_Update_By_ID]...';


GO
CREATE PROCEDURE [workqueue].[QueueItem_Update_By_ID]
              @QueueItemID int,
              @WescotRef int,
              @CustomerName nvarchar(100),
              @CompletedDate datetime,
              @CompletedBy nvarchar(100),
              @DueDate datetime,
              @CreatedDate datetime,
              @CreatedBy nvarchar(100),
              @Summary nvarchar(500),
              @ParentQueueItemID int,
              @LockTime datetime,
              @LockedBy nvarchar(100)
AS

              UPDATE
                           workqueue.QueueItem
              SET
                           WescotRef = @WescotRef,
                           CustomerName = @CustomerName,
                           CompletedDate = @CompletedDate,
                           CompletedBy = @CompletedBy,
                           DueDate = @DueDate,
                           CreatedDate = @CreatedDate,
                           CreatedBy = @CreatedBy,
                           Summary = @Summary,
                           ParentQueueItemID = @ParentQueueItemID,
                           LockTime = @LockTime,
                           LockedBy = @LockedBy
              WHERE
                           QueueItemID = @QueueItemID

              EXEC [workqueue].[QueueSearch_User] @QueueItemId
RETURN 0

GO
PRINT N'Creating [workqueue].[ForgetMe]...';


GO


CREATE PROCEDURE [workqueue].[ForgetMe]
              @WescotRef int
AS

              EXEC [callback].[CallbackDetails_Delete_WescotRef] @WescotRef
              EXEC [workqueue].[QueueItem_Delete_WescotRef] @WescotRef

RETURN 0
GO
PRINT N'Creating [workqueue].[GdprAnonymiseMe]...';


GO

CREATE PROCEDURE [workqueue].[GdprAnonymiseMe]
              @WescotRef int
AS

              EXEC [callback].[GdprAnonymiseMe] @WescotRef
              EXEC [workqueue].[QueueItemGdprAnnoymiseMe] @WescotRef

RETURN 0
GO
PRINT N'Update complete.';


GO